name: 🔐 DevSecOps Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-scanning:
    runs-on: ubuntu-latest
    name: 🛡️ Run Security Scans
    
    steps:
    # Step 1: Checkout code
    - name: ⬇️ Checkout code
      uses: actions/checkout@v3

    # Step 2: Secret Scanning (Gitleaks)
    - name: 🔓 Secret Scanning
      uses: gitleaks/gitleaks-action@v2
      with:
        config-path: .gitleaks.toml

    # Step 3: SCA Scanning (Trivy)
    - name: 📦 SCA Scan (Dependencies)
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    # Step 4: SAST Scanning (Semgrep)  
    - name: 🔎 SAST Scan (Code Analysis)
      uses: returntocorp/semgrep-action@v1
      with:
        config: p/security-audit

    # Step 5: Upload Reports
    - name: 💾 Upload Security Reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          *.sarif
          gl-*
        retention-days: 30

    # Step 6: Critical Vulnerability Check
    - name: ⚠️ Check Critical Findings
      id: check-critical
      run: |
        echo "🔍 Checking for critical vulnerabilities..."
        echo "has_critical=true" >> $GITHUB_OUTPUT
        echo "🚨 Critical vulnerabilities simulation"

    # Step 7: Notification Simulation
    - name: 📢 Critical Alert Simulation
      if: steps.check-critical.outputs.has_critical == 'true'
      run: |
        echo "📢 SENDING NOTIFICATION TO SLACK/EMAIL"
        echo "Repository: $GITHUB_REPOSITORY"
        echo "Critical vulnerabilities detected!"
        echo "Please check the security reports above."
